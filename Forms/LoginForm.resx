<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>